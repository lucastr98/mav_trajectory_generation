<launch>
  <arg name="mav_name" default="peregrine"/>

    <group ns="/$(arg mav_name)/mavros/">

        <node name="mav_nonlinear_mpc" pkg="mav_nonlinear_mpc" type="nonlinear_mpc_node" respawn="true" clear_params="true" output="screen">
          <remap from="odometry" to="ground_truth/odometry" />
          <rosparam file="$(find mav_nonlinear_mpc)/resources/nonlinear_mpc_$(arg mav_name).yaml" />
          <rosparam file="$(find mav_disturbance_observer)/resources/disturbance_observer_$(arg mav_name).yaml"/>
          <param name="use_rc_teleop" value="false"/>
          <param name="verbose" value="true" />
          <param name="reference_frame" value="world"/>
        </node>

        <node name="PID_attitude_controller" pkg="mav_lowlevel_attitude_controller" type="mav_pid_attitude_controller_node" respawn="true" clear_params="true" output="screen">
          <remap from="odometry" to="ground_truth/odometry" />
          <rosparam file="$(find mav_lowlevel_attitude_controller)/resources/PID_attitude_$(arg mav_name).yaml" />
        </node>

        <!--- Trajectory planner -->
        <node name="planner" pkg="mav_trajectory_generation_example" type="trajectory_generation_example" output="screen">
            <rosparam command="load" file="$(find mav_trajectory_generation_example)/cfg/$(arg mav_name)_params.yaml"/>
            <remap from="uav_pose" to="odometry_sensor1/odometry"/>
        </node>

        <!--- Trajectory sampler -->
        <node name="sampler" pkg="mav_trajectory_generation_ros" type="trajectory_sampler_node" output="screen">
            <remap from="path_segments_4D" to="trajectory"/>
            <param name="publish_whole_trajectory" value="true"/>
        </node>

    </group>
</launch>
